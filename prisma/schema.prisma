generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model item {
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String         @db.VarChar(255)
  type_id       String?        @db.Uuid
  category_id   String?        @db.Uuid
  user_id       String?        @db.Uuid
  created_at    DateTime       @default(now()) @db.Timestamp(6)
  updated_at    DateTime       @default(now()) @db.Timestamp(6)
  item_category item_category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  item_type     item_type?     @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user?          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  item_batch    item_batch[]
  transaction   transaction[]
}

model item_batch {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  batch_number String   @db.VarChar(255)
  item_id      String?  @db.Uuid
  user_id      String?  @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  item         item?    @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model item_category {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  category   String   @db.VarChar(255)
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  item       item[]
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model item_type {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type       String   @db.VarChar(255)
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  item       item[]
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model people {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  role       String   @db.VarChar(255)
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model transaction {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_type String   @db.VarChar(255)
  item_id          String?  @db.Uuid
  user_id          String?  @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  item             item?    @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model university {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String          @unique @db.VarChar(255)
  firstName     String?         @db.VarChar(255)
  lastName      String?         @db.VarChar(255)
  roq_user_id   String          @db.VarChar(255)
  tenant_id     String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  item          item[]
  item_batch    item_batch[]
  item_category item_category[]
  item_type     item_type[]
  people        people[]
  transaction   transaction[]
  university    university[]
}
